{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","_ref$onAddMovie","onAddMovie","_useState","useState","_useState2","_slicedToArray","isLoadingMovie","setIsLoadingMovie","_useState3","_useState4","setTitle","_useState5","_useState6","response","setResponse","_useState7","_useState8","errorMessage","setErrorMessage","_useState9","_useState10","setMovie","_useState11","_useState12","isFirstSearch","setIsFirstSearch","useEffect","newMovie","Title","Plot","Poster","concat","imdbID","reset","_Fragment","onSubmit","event","query","preventDefault","fetch","then","res","json","catch","Response","Error","finally","htmlFor","type","id","placeholder","classNames","value","onChange","target","onClick","disabled","some","_ref2","App","setMovies","currentMovies","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb421eaa.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\n\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\n\ntype Props = {\n  onAddMovie: (movie: Movie) => void;\n  movies: Movie[];\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  onAddMovie = () => {},\n  movies,\n}) => {\n  const [isLoadingMovie, setIsLoadingMovie] = useState(false);\n  const [title, setTitle] = useState('');\n  const [response, setResponse] = useState<MovieData | ResponseError | {}>({});\n  const [errorMessage, setErrorMessage] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n\n  const [isFirstSearch, setIsFirstSearch] = useState(true);\n\n  useEffect(() => {\n    if ('Title' in response) {\n      const newMovie: Movie = {\n        title: response.Title,\n        description: response.Plot,\n        imgUrl: response.Poster === 'N/A'\n          ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n          : response.Poster,\n        imdbUrl: `https://www.imdb.com/title/${response.imdbID}`,\n        imdbId: response.imdbID,\n      };\n\n      setMovie(newMovie);\n      setIsFirstSearch(false);\n    }\n\n    if ('Error' in response) {\n      setErrorMessage('Can\\'t find a movie with such a title');\n    }\n  }, [response]);\n\n  const handleFindMovie = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setErrorMessage('');\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setIsLoadingMovie(true);\n\n    getMovie(`[${title}]`)\n      .then(setResponse)\n      .finally(() => setIsLoadingMovie(false));\n  };\n\n  const reset = () => {\n    setTitle('');\n    setResponse({});\n    setMovie(null);\n  };\n\n  const handleAddMovie = () => {\n    if (movie !== null) {\n      if (movies.some(({ imdbId }) => imdbId === movie.imdbId)) {\n        reset();\n      } else {\n        onAddMovie(movie);\n        reset();\n      }\n    }\n\n    setIsFirstSearch(true);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': errorMessage })}\n              value={title}\n              onChange={handleFindMovie}\n            />\n          </div>\n\n          {errorMessage && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              {errorMessage}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light', {\n                'is-loading': isLoadingMovie,\n              })}\n              onClick={() => setIsLoadingMovie(true)}\n              disabled={!title}\n            >\n              {isFirstSearch ? ('Find a movie') : ('Search again')}\n\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=6484a444';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    setMovies(currentMovies => [...currentMovies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAddMovie={addMovie} movies={movies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}